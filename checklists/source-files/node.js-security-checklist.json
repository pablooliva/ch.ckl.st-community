{
  "parentChecklist": null,
  "active": true,
  "public": true,
  "created": "2019-01-08T14:02:24.514Z",
  "updated": "2019-01-08T14:02:24.514Z",
  "documentTags": [
    {
      "active": true,
      "created": "2019-01-08T14:02:24.523Z",
      "_id": "5c3a64e2792475004a00248a",
      "owner": "5beda2b541b36800db44faa4",
      "label": "nodejs",
      "__v": 0
    },
    {
      "active": true,
      "created": "2019-01-08T14:02:24.523Z",
      "_id": "5c3a64e4792475004a00248b",
      "owner": "5beda2b541b36800db44faa4",
      "label": "js",
      "__v": 0
    },
    {
      "active": true,
      "created": "2019-01-08T14:02:24.523Z",
      "_id": "5c3a64e8792475004a00248c",
      "owner": "5beda2b541b36800db44faa4",
      "label": "javascript",
      "__v": 0
    },
    {
      "active": true,
      "created": "2018-12-31T12:33:15.825Z",
      "_id": "5c2e45e35205c0004ad11b4a",
      "owner": "5beda2b541b36800db44faa4",
      "label": "webdev",
      "__v": 0
    },
    {
      "active": true,
      "created": "2018-12-31T12:33:15.825Z",
      "_id": "5c2e45ea5205c0004ad11b4b",
      "owner": "5beda2b541b36800db44faa4",
      "label": "web development",
      "__v": 0
    },
    {
      "active": true,
      "created": "2019-01-08T14:02:24.523Z",
      "_id": "5c3a07c8792475004a002277",
      "owner": "5beda2b541b36800db44faa4",
      "label": "security",
      "__v": 0
    }
  ],
  "_id": "5c3a6dac792475004a002499",
  "owner": "5beda2b541b36800db44faa4",
  "documentTitle": "Node.js Security Checklist",
  "flexibleText": "<p>Harden your Node.js server against attacks.</p><p>This checklist evolved from a post on <a href=\"https://blog.risingstack.com/node-js-security-checklist/\" target=\"_blank\">RisingStack</a>.</p><p><img src=\"https://api.ch.ckl.st/user-images/risingstack-logo.png-1547332937895.png\"></p><p>This checklist is part of a comprehensive series on critical <a href=\"https://ch.ckl.st/share/5c38a726792475004a001e19\" target=\"_blank\">checklists for web development</a>.</p>",
  "checklistTags": [],
  "customCss": "",
  "sections": [
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a51360e",
          "label": "Use rate-limiting",
          "flexibleText": "<p>To protect your applications from these kind of attacks you have to implement some kind of rate-limiting. You can do so easily with one such package:</p><p><a href=\"https://www.npmjs.com/package/express-rate-limit\" target=\"_blank\">https://www.npmjs.com/package/express-rate-limit</a></p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a51360d",
      "title": "Brute Force and Denial of Service",
      "flexibleText": "<p>Account lockout is a technique to mitigate brute force guessing attacks. In practice it means that after a small number of unsuccessful login attempts the systems prohibits login attempts for a given period <em>(initially it can be a couple of minutes, then it can be increased exponentially)</em>.</p>"
    },
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a51360c",
          "label": "Use security middleware",
          "flexibleText": "<p><a href=\"https://www.npmjs.com/package/lusca\" target=\"_blank\">Lusca</a> and <a href=\"https://www.npmjs.com/package/helmet\" target=\"_blank\">Helmet</a> can help with implementing the headers discussed here. These two tools offer overlapping protection if you use them with the defaults settings enabled, so make sure that you customize their use.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a51360b",
          "label": "Strict-Transport-Security",
          "flexibleText": "<p>Strict-Transport-Security enforces secure (HTTP over SSL/TLS) connections to the server.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a51360a",
          "label": "X-Frame-Options",
          "flexibleText": "<p>X-Frame-Options provides <a href=\"https://www.owasp.org/index.php/Clickjacking\" target=\"_blank\">clickjacking</a> protection.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513609",
          "label": "X-XSS-Protection",
          "flexibleText": "<p>X-XSS-Protection enables the Cross-site scripting (XSS) filter built into most recent web browsers.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513608",
          "label": "X-Content-Type-Options",
          "flexibleText": "<p>X-Content-Type-Options prevents browsers from MIME-sniffing a response away from the declared content-type.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513607",
          "label": "Content-Security-Policy",
          "flexibleText": "<p>Content-Security-Policy prevents a wide range of attacks, including Cross-site scripting and other cross-site injections.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513606",
          "label": "X-Download-Options",
          "flexibleText": "<p>X-Download-Options prevent Internet Explorer from executing downloads in your site’s context.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513605",
          "label": "X-Powered-By",
          "flexibleText": "<p>X-Powered-By header to make it slightly harder for attackers to see what potentially-vulnerable technology powers your site.</p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a513604",
      "title": "Security HTTP Headers",
      "flexibleText": ""
    },
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513603",
          "label": "Use secure cookies",
          "flexibleText": "<p>The importance of secure use of cookies cannot be understated: especially within dynamic web applications, which need to maintain state across a stateless protocol such as HTTP.</p><h3>Cookie Flags</h3><ul><li><strong>secure</strong> - this attribute tells the browser to only send the cookie if the request is being sent over HTTPS.</li><li><strong>httpOnly</strong> - this attribute is used to help prevent attacks such as cross-site scripting, since it does not allow the cookie to be accessed via JavaScript.</li></ul><h3>Cookie Scope</h3><ul><li><strong>domain</strong> - this attribute is used to compare against the domain of the server in which the URL is being requested. If the domain matches or if it is a sub-domain, then the path attribute will be checked next.</li><li><strong>path</strong> - in addition to the domain, the URL path that the cookie is valid for can be specified. If the domain and path match, then the cookie will be sent in the request.</li><li><strong>expires</strong> - this attribute is used to set persistent cookies, since the cookie does not expire until the set date is exceeded.</li></ul><p>In Node.js you can easily create this cookie using the <a href=\"https://www.npmjs.com/package/cookies\" target=\"_blank\">cookies</a> package. Again, this is quite low-level, so you will probably end up using a wrapper, like the <a href=\"https://www.npmjs.com/package/cookie-session\" target=\"_blank\">cookie-session</a>.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513602",
          "label": "Protect against CSRF",
          "flexibleText": "<p>Cross-Site Request Forgery is an attack that forces a user to execute unwanted actions on a web application in which they're currently logged in.</p><p><a href=\"https://www.npmjs.com/package/lusca\" target=\"_blank\">Lusca</a>, mentioned previously, provides an option to protect against CSRF.</p><p>Implementing CSRF protection requires more than just enabling the feature in Lusca for example, but also requires echoing back the CSRF tocken in your request. See an <a href=\"https://blog.risingstack.com/node-js-security-checklist/#csrf\" target=\"_blank\">example</a> of this.</p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a513601",
      "title": "Session Management",
      "flexibleText": ""
    },
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a513600",
          "label": "XSS attacks",
          "flexibleText": "<p>Sanitizing user input helps prevent Cross Site Scripting (XSS) attacks.</p><ul><li><strong>Reflected Cross site scripting</strong> occurs when the attacker injects executable JavaScript code into the HTML response with specially crafted links.</li><li><strong>Stored Cross site scripting</strong> occurs when the application stores user input which is not correctly filtered. It runs within the user’s browser under the privileges of the web application.</li></ul><p>Guard against XSS with:</p><p><a href=\"https://www.npmjs.com/package/express-sanitizer\" target=\"_blank\">https://www.npmjs.com/package/express-sanitizer</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135ff",
          "label": "SQL Injection",
          "flexibleText": "<p>SQL injection consists of injection of a partial or complete SQL query via user input. It can read sensitive information or be destructive as well. The easiest way to defend against these kind of attacks is to use parameterized queries or prepared statements.</p><p>The easiest way to defend against these kind of attacks is to use parameterized queries or prepared statements.</p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135fe",
          "label": "MongoDB Operator Injection",
          "flexibleText": "<p>Object keys starting with a <code style=\"background-color: rgb(240, 240, 240);\">$</code> or containing a <code style=\"background-color: rgb(240, 240, 240);\">.</code> are <em>reserved</em> for use by MongoDB as operators. Malicious users could send an object containing a <code style=\"background-color: rgb(240, 240, 240);\">$</code> operator, or including a <code style=\"background-color: rgb(240, 240, 240);\">.</code>, which could change the context of a database operation. Most notorious is the <code style=\"background-color: rgb(240, 240, 240);\">$where</code> operator, which can execute arbitrary JavaScript on the database.</p><p>Sanitize user-supplied data to prevent MongoDB Operator Injection with:</p><p><a href=\"https://www.npmjs.com/package/express-mongo-sanitize\" target=\"_blank\">https://www.npmjs.com/package/express-mongo-sanitize</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135fd",
          "label": "Command Injection",
          "flexibleText": "<p>Command injection is an technique used by an attacker to run OS commands on the remote web server.</p><p>In practice, if you have a URL like <em>https://example.com/downloads?file=user1.txt </em>it could be turn into <em>https://example.com/downloads?file=%3Bcat%20/etc/passwd. </em>In this example %3B becomes the semicolon, so multiple OS commands can be run.</p><p>Defend against these kind of attacks by filtering/sanitizing user input:</p><p><a href=\"https://www.npmjs.com/package/express-sanitizer\" target=\"_blank\">https://www.npmjs.com/package/express-sanitizer</a></p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a5135fc",
      "title": "Data Validation",
      "flexibleText": "<p>Always sanitize user input to prevent invalid or dangerous data from being executed by your backend.</p>"
    },
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135fb",
          "label": "Set up SSL/TLS",
          "flexibleText": "<p>Setting this up is beyond the scope of this checklist. It is not as easy as installing and using middleware or a plugin, but it is also not difficult.</p><p>This is not the only guide, there are several others that will suit your specific needs if you search online, but we recommend using Let's Encrypt:</p><p><a href=\"https://letsencrypt.org/getting-started/\" target=\"_blank\">https://letsencrypt.org/getting-started/</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135fa",
          "label": "HSTS - HTTP Strict Transport Security",
          "flexibleText": "<p>This was previously mentioned in the Security HTTP Headers section. The Strict-Transport-Security header enforces secure (HTTP over SSL/TLS) connections to the server.</p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a5135f9",
      "title": "SSL/TLS",
      "flexibleText": "<p>With free certificates easily available today from <a href=\"https://letsencrypt.org/\" target=\"_blank\">Let's Encrypt</a>, there is no reason why you would not implement this key security feature.</p>"
    },
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f8",
          "label": "Error Codes, Stack Traces",
          "flexibleText": "<p>You should always log them, but do not show them to the users.</p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a5135f7",
      "title": "Error Handling",
      "flexibleText": ""
    },
    {
      "checklistItems": [
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f6",
          "label": "Snyk",
          "flexibleText": "<p>Automates finding &amp; fixing vulnerabilities in your dependencies:</p><p><a href=\"https://snyk.io/\" target=\"_blank\">https://snyk.io/</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f5",
          "label": "Hydra",
          "flexibleText": "<p>Number one of the biggest security holes are passwords, as every password security study shows. This tool is a proof of concept code, to give researchers and security consultants the possibility to show how easy it would be to gain unauthorized access from remote to a system.</p><p><a href=\"https://github.com/vanhauser-thc/thc-hydra\" target=\"_blank\">https://github.com/vanhauser-thc/thc-hydra</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f4",
          "label": "sqlmap",
          "flexibleText": "<p>An open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. Use this tool to test your applications for SQL injection vulnerabilities:</p><p><a href=\"http://sqlmap.org/\" target=\"_blank\">http://sqlmap.org/</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f3",
          "label": "Security Headers",
          "flexibleText": "<p>The HTTP response headers that this site analyses provide huge levels of protection and it's important that sites deploy them.</p><p><a href=\"https://securityheaders.com/\" target=\"_blank\">https://securityheaders.com/</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f2",
          "label": "webhint",
          "flexibleText": "<p>A linting tool that will help you with your site's accessibility, speed, security and more, by checking your code for best practices and common errors.</p><p><a href=\"https://webhint.io/#scanner-input\" target=\"_blank\">https://webhint.io/#scanner-input</a></p>",
          "checked": false
        },
        {
          "checklistTagsEnabled": [],
          "_id": "5c56e7fb5830f6004a5135f1",
          "label": "Observatory by Mozilla",
          "flexibleText": "<p>Configure your site safely and securely.</p><p><a href=\"https://observatory.mozilla.org/\" target=\"_blank\">https://observatory.mozilla.org/</a></p>",
          "checked": false
        }
      ],
      "_id": "5c56e7fb5830f6004a5135f0",
      "title": "Test Your Security",
      "flexibleText": "<p>These tools test your security and give you insights on what may need to be improved. They cover several of the points discussed in this checklist.</p>"
    }
  ],
  "__v": 11
}